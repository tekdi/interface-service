name: INTERFACE-TAG-BASED-DEPLOYMENT

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment (qa or prod)"
        required: true
        default: "qa"
      tag:
        description: "Image tag to deploy"
        required: true

jobs:
  deploy:
    name: Deploy to AWS EKS
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Check out repository
        uses: actions/checkout@v2

      # 2. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION_NAME }}

      # 3. Determine EKS cluster name based on environment
      - name: Set EKS cluster name
        run: |
          if [[ "${{ github.event.inputs.environment }}" == "prod" ]]; then
            echo "EKS_CLUSTER_NAME=${{ secrets.EKS_CLUSTER_NAME_PROD }}" >> $GITHUB_ENV
          else
            echo "EKS_CLUSTER_NAME=${{ secrets.EKS_CLUSTER_NAME }}" >> $GITHUB_ENV
          fi
          echo "Using cluster: $EKS_CLUSTER_NAME"

      # 4. Write ConfigMap manifest
      - name: Write ConfigMap manifest
        run: |
          mkdir -p manifest
          echo "${{ secrets.ENV_FILE_CONTENT }}" | base64 -d > manifest/configmap.yaml
          echo "Generated ConfigMap:"
          cat manifest/configmap.yaml

      # 5. Update Deployment manifest
      - name: Update Deployment Manifest
        env:
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.event.inputs.tag }}
        run: |
          envsubst < manifest/interface.yaml > manifest/interface-updated.yaml
          echo "Updated deployment manifest:"
          cat manifest/interface-updated.yaml

      # 6. Deploy to AWS EKS
      - name: Deploy to AWS EKS
        env:
          EKS_CLUSTER_NAME: ${{ env.EKS_CLUSTER_NAME }}
        run: |
          echo "Updating kubeconfig for cluster $EKS_CLUSTER_NAME"
          aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region ${{ secrets.AWS_REGION_NAME }}
          
          echo "Applying ConfigMap"
          kubectl apply -f manifest/configmap.yaml
          
          echo "Applying Deployment"
          kubectl apply -f manifest/interface-updated.yaml
          
          echo "Restarting deployment to pick up new config"
          kubectl rollout restart deployment interface
          
          sleep 10
          echo "Current interface pods:"
          kubectl get pods | grep interface
